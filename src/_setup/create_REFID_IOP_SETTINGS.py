"""
=======================================================================================================================
.DESCRIPTION

    Create Oracle Table (SA.REFID_IOP_SETTINGS)
    Copy from PS

.FUNCTIONALITY
    Version	Date		Who	Comment
    -------	----		---	-------
    1.0		03/02/2023  CWY	Initial Version


.NOTES

.COMMENTS
    CREATE TABLE SA.REFID_IOP_SETTINGS (
            ID 					NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
            ENV 				VARCHAR2(5), 
            ORG 				VARCHAR2(10), 
            CODE 				VARCHAR2(20), 
            VALUE 				VARCHAR2(200), 
            DESCRIPTION 		VARCHAR2(200), 
        CONSTRAINT REFID_IDSETTINGS_PK PRIMARY KEY (ID)
       )
        
=======================================================================================================================
"""
# =========================================
# Import modules
import os
import sys
import datetime
import logging
from database_tools import OracleConnexion

# =========================================
# Init Logging

# check if argument is passed
if len(sys.argv) > 1:
    # the first argument is the script name, so we start from the second argument
    filename = sys.argv[1]
    # print("filename:", filename)
else:
    # print("No arguments passed - Create a new filename")
    folder_path = f"../_log/{datetime.datetime.now().strftime('%Y-%m-%d')}"
    if not os.path.exists(folder_path):
        os.makedirs(folder_path)
    filename = f"{folder_path}/refid_sync_{datetime.datetime.now().strftime('%H%M%S')}.log"

logging.basicConfig(level=logging.DEBUG,
                    format='%(process)d:%(name)s ; %(asctime)s ; %(levelname)s ; %(message)s',
                    datefmt='%Y-%m-%d %H:%M:%S',
                    filename=filename,
                    filemode='a'
                    )

# =========================================
# Init Global Variables

logging.info(f'==> script[{os.path.basename(__file__)}]')
print(f'==> script[{os.path.basename(__file__)}]')

DB = "DB-IT"
oracle_IT = OracleConnexion(DB)


# =========================================
# Functions / Classes


def Get_REFID_IOP_SETTINGS():
    sql_query = "select * from SA.REFID_IOP_SETTINGS"
    dataset = oracle_IT.fetch_data_from_db(sql_query)
    return dataset


def Drop_REFID_IOP_SETTINGS():
    sql_query = "DROP TABLE SA.REFID_IOP_SETTINGS"
    dataset = oracle_IT.exec_ddl_sql(sql_query)
    return dataset


def Create_REFID_IOP_SETTINGS():
    sql_query = f"""
    CREATE TABLE SA.REFID_IOP_SETTINGS (
            ID 					NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
            ENV 				VARCHAR2(5), 
            ORG 				VARCHAR2(10), 
            CODE 				VARCHAR2(20), 
            VALUE 				VARCHAR2(200), 
            DESCRIPTION 		VARCHAR2(200), 
        CONSTRAINT REFID_IDSETTINGS_PK PRIMARY KEY (ID)
       )
    """
    dataset = oracle_IT.exec_ddl_sql(sql_query)
    return dataset


def CreateIndex_REFID_IOP_SETTINGS():
    sql_query = "CREATE UNIQUE INDEX SA.REFID_CODE_PK ON SA.REFID_IOP_SETTINGS (ENV,ORG,CODE)"
    dataset = oracle_IT.exec_ddl_sql(sql_query)
    return dataset


def Set_REFID_IOP_SETTINGS():
    # GENERAL Settings

    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('GEN','GEN','ENV','DEV','Environnement')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('GEN','GEN','ORG','OSIRIS','Organization')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('GEN','GEN','DEBUG','0','Debugging mode')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('GEN','GEN','PATHCSV','c:\temp\AD_Export','Path for CSV files')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('GEN','GEN','PATHJSON','c:\temp\AD_Export','Path for JSON files')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('GEN','GEN','PATHLOG','D:\DEV\PS\PROJETS\REFID\LOG','Path for LOG files')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('GEN','GEN','DEFAULTPWD','Passw@rd0001()','Initial Password')"
    oracle_IT.exec_ddl_sql(sql_query)

    # LDAP Settings

    # DEV - OSIRIS
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('DEV','OSIRIS','LDAPSERVER','helium.chu-brugmann.be','LDAP Server')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('DEV','OSIRIS','LDAPSEARCHBASE','OU=REFID,OU=Users,OU=TESTOSIRIS,DC=chu-brugmann,DC=be','LDAP SerachBase')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('DEV','OSIRIS','LDAPFILTER','(&(sAMAccountName=*)(cn=*)(employeeID=*)(employeeNumber=*)(employeeType=*)(businessCategory=*)(company=*)(physicalDeliveryOfficeName=*)(whenCreated>=20000101000000.0Z))','LDAP Filter')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('DEV','OSIRIS','LDAPMAILEXT','@chu-brugmann.be','Mail Extension')"
    oracle_IT.exec_ddl_sql(sql_query)

    # DEV - CHUBXL
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('DEV','CHUBXL','LDAPSERVER','helium.chu-brugmann.be','LDAP Server')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('DEV','CHUBXL','LDAPSEARCHBASE','OU=CHUBXL,OU=Users,OU=TESTOSIRIS,DC=chu-brugmann,DC=be','LDAP SerachBase')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('DEV','CHUBXL','LDAPFILTER','(&(sAMAccountName=*)(cn=*)(employeeID=*)(employeeNumber=*)(employeeType=*)(businessCategory=*)(company=*)(physicalDeliveryOfficeName=*)(whenCreated>=20000101000000.0Z))','LDAP Filter')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('DEV','CHUBXL','LDAPMAILEXT','@chubxl.be','Mail Extension')"
    oracle_IT.exec_ddl_sql(sql_query)

    # PROD - OSIRIS
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('PROD','OSIRIS','LDAPSERVER','helium.chu-brugmann.be','LDAP Server')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('PROD','OSIRIS','LDAPSEARCHBASE','OU=REFID,OU=Users,OU=OSIRIS,DC=chu-brugmann,DC=be','LDAP SerachBase')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('PROD','OSIRIS','LDAPFILTER','(&(sAMAccountName=*)(cn=*)(employeeID=*)(employeeNumber=*)(employeeType=*)(businessCategory=*)(company=*)(physicalDeliveryOfficeName=*)(whenCreated>=20000101000000.0Z))','LDAP Filter')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('PROD','OSIRIS','LDAPMAILEXT','@chu-brugmann.be','Mail Extension')"
    oracle_IT.exec_ddl_sql(sql_query)

    # PROD - CHUBXL
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('PROD','CHUBXL','LDAPSERVER','helium.chu-brugmann.be','LDAP Server')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('PROD','CHUBXL','LDAPSEARCHBASE','OU=CHUBXL,OU=Users,OU=OSIRIS,DC=chu-brugmann,DC=be','LDAP SerachBase')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('PROD','CHUBXL','LDAPFILTER','(&(sAMAccountName=*)(cn=*)(employeeID=*)(employeeNumber=*)(employeeType=*)(businessCategory=*)(company=*)(physicalDeliveryOfficeName=*)(whenCreated>=20000101000000.0Z))','LDAP Filter')"
    oracle_IT.exec_ddl_sql(sql_query)
    sql_query = "INSERT INTO SA.REFID_IOP_SETTINGS (ENV,ORG,CODE,VALUE,DESCRIPTION) VALUES ('PROD','CHUBXL','LDAPMAILEXT','@chubxl.be','Mail Extension')"
    oracle_IT.exec_ddl_sql(sql_query)

    return True

# =========================================
# Main

# Start Script


now_start = datetime.datetime.now()
logging.info(f"Start at : {now_start.strftime('%Y-%m-%d %H:%M:%S')}")

logging.info(f"Create Oracle Table (SA.REFID_IOP_SETTINGS) for DB:{DB}")

try:
    logging.info(f"Get_REFID_IOP_SETTINGS")
    dataset = Get_REFID_IOP_SETTINGS()
    logging.info(f"=> {len(dataset)} rows")
except:
    logging.info(f"=> Table do not exist")

try:
    logging.info(f"Drop_REFID_IOP_SETTINGS")
    dataset = Drop_REFID_IOP_SETTINGS()
    logging.info(f"=> {dataset}")
except:
    logging.info(f"=> Table do not exist")

try:
    logging.info(f"Create_REFID_IOP_SETTINGS")
    dataset = Create_REFID_IOP_SETTINGS()
    logging.info(f"=> {dataset}")
except:
    logging.info(f"=> Cannot create table")

try:
    logging.info(f"Create_REFID_IOP_SETTINGS")
    dataset = CreateIndex_REFID_IOP_SETTINGS()
    logging.info(f"=> {dataset}")
except:
    logging.info(f"=> Cannot create table")

try:
    logging.info(f"Set_REFID_IOP_SETTINGS")
    dataset = Set_REFID_IOP_SETTINGS()
    logging.info(f"=> {dataset}")
except:
    logging.info(f"=> Cannot create table")

try:
    logging.info(f"Get_REFID_IOP_SETTINGS")
    dataset = Get_REFID_IOP_SETTINGS()
    logging.info(f"=> {len(dataset)} rows")
    logging.info(dataset)
except:
    logging.info(f"=> Table do not exist")

# Stop Script

now_stop = datetime.datetime.now()
logging.info(f"Stop at : {now_stop.strftime('%Y-%m-%d %H:%M:%S')} ")

delta = now_stop - now_start
logging.info(f"Delta time : {delta}")


# =========================================
# End of Script

logging.info(f"<== End of Script ==>")
