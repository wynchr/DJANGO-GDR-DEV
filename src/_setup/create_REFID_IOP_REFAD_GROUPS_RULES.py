"""
=======================================================================================================================
.DESCRIPTION

    Create Oracle Table (SA.REFID_IOP_REFAD_GROUPS_RULES)
    Copy from PS

.FUNCTIONALITY
    Version	Date		Who	Comment
    -------	----		---	-------
    1.0		03/02/2023  CWY	Initial Version


.NOTES

.COMMENTS
    CREATE TABLE SA.REFID_IOP_REFAD_GROUPS_RULES (
                ID 					NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
                GROUPCATEGORY 		VARCHAR2(30),
                INSTITUTION 		VARCHAR2(30),
                SITE	 			VARCHAR2(30),
                EMPLOYEETYPE 		VARCHAR2(30),
                SAMACCOUNTNAME 		VARCHAR2(100),
                DISTINGUISHEDNAME 	VARCHAR2(400),
            CONSTRAINT REFID_IDSETTINGS_PK PRIMARY KEY (ID)
           )
           
GROUPCATEGORY|INSTITUTION |SITE  |EMPLOYEETYPE |SAMACCOUNTNAME                 |DISTINGUISHEDNAME
-------------+------------+------+-------------+-------------------------------+---------------------------------------------------------------------------------------------------------------------------
Distribution |CHU-BRUGMANN|ASTRID|ADMINISTRATIF|Tout le PATO de Reine Astrid   |CN=Tout le PATO de Reine Astrid,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Distribution |CHU-BRUGMANN|ASTRID|OTHER        |Tout le PATO de Reine Astrid   |CN=Tout le PATO de Reine Astrid,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Distribution |CHU-BRUGMANN|ASTRID|PARAMEDICAL  |Tout le PATO de Reine Astrid   |CN=Tout le PATO de Reine Astrid,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Distribution |CHU-BRUGMANN|ASTRID|TECHNIQUE    |Tout le PATO de Reine Astrid   |CN=Tout le PATO de Reine Astrid,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Distribution |CHU-BRUGMANN|BRIEN |ADMINISTRATIF|Tout le PATO de Brien          |CN=Tout le PATO de Brien,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Distribution |CHU-BRUGMANN|BRIEN |OTHER        |Tout le PATO de Brien          |CN=Tout le PATO de Brien,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Distribution |CHU-BRUGMANN|BRIEN |PARAMEDICAL  |Tout le PATO de Brien          |CN=Tout le PATO de Brien,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Distribution |CHU-BRUGMANN|BRIEN |TECHNIQUE    |Tout le PATO de Brien          |CN=Tout le PATO de Brien,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|-     |MEDICAL      |OSIRIS - MVSL - Medical        |CN=OSIRIS - MVSL - Medical,OU=MedicalViewerSilverLight,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|-     |MEDICAL      |Tous les medecins de Brugmann  |CN=Tous les medecins de Brugmann,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|-     |MEDICAL      |Wireless Users                 |CN=Wireless Users,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|-     |NURSING      |OSIRIS - MVSL - Nursing        |CN=OSIRIS - MVSL - Nursing,OU=MedicalViewerSilverLight,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|-     |PARAMEDICAL  |OSIRIS - MVSL - Paramedical    |CN=OSIRIS - MVSL - Paramedical,OU=MedicalViewerSilverLight,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|ASTRID|MEDICAL      |Tous les medecins de Brugmann  |CN=Tous les medecins de Brugmann,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|ASTRID|MEDICAL      |Tout le nursing de Reine Astrid|CN=Tout le nursing de Reine Astrid,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|ASTRID|NURSING      |Tout le nursing de Reine Astrid|CN=Tout le nursing de Reine Astrid,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|BRIEN |MEDICAL      |Tous les medecins de Brien     |CN=Tous les medecins de Brien,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|BRIEN |NURSING      |Tout le nursing de Brien       |CN=Tout le nursing de Brien,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|HORTA |ADMINISTRATIF|Tout le PATO de Horta          |CN=Tout le PATO de Horta,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|HORTA |MEDICAL      |Tous les medecins de Horta     |CN=Tous les medecins de Horta,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|HORTA |NURSING      |Tout le nursing de Horta       |CN=Tout le nursing de Horta,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|HORTA |OTHER        |Tout le PATO de Horta          |CN=Tout le PATO de Horta,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|HORTA |PARAMEDICAL  |Tout le PATO de Horta          |CN=Tout le PATO de Horta,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |CHU-BRUGMANN|HORTA |TECHNIQUE    |Tout le PATO de Horta          |CN=Tout le PATO de Horta,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |HUDERF      |-     |ADMINISTRATIF|Tout le PATO de l Huderf       |CN=Tout le PATO de l Huderf,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |HUDERF      |-     |MEDICAL      |OSIRIS - MVSL - Medical        |CN=OSIRIS - MVSL - Medical,OU=MedicalViewerSilverLight,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |HUDERF      |-     |MEDICAL      |Tous les medecins de l Huderf  |CN=Tous les medecins de l Huderf,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |HUDERF      |-     |MEDICAL      |Wireless Users                 |CN=Wireless Users,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |HUDERF      |-     |NURSING      |OSIRIS - MVSL - Nursing        |CN=OSIRIS - MVSL - Nursing,OU=MedicalViewerSilverLight,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |HUDERF      |-     |NURSING      |Tout le nursing de l Huderf    |CN=Tout le nursing de l Huderf,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |HUDERF      |-     |OTHER        |Tout le PATO de l Huderf       |CN=Tout le PATO de l Huderf,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |HUDERF      |-     |PARAMEDICAL  |OSIRIS - MVSL - Paramedical    |CN=OSIRIS - MVSL - Paramedical,OU=MedicalViewerSilverLight,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |HUDERF      |-     |PARAMEDICAL  |Tout le PATO de l Huderf       |CN=Tout le PATO de l Huderf,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be
Security     |HUDERF      |-     |TECHNIQUE    |Tout le PATO de l Huderf       |CN=Tout le PATO de l Huderf,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be

        
=======================================================================================================================
"""
# =========================================
# Import modules
import os
import sys
import datetime
import logging
from database_tools import OracleConnexion

# =========================================
# Init Logging

# check if argument is passed
if len(sys.argv) > 1:
    # the first argument is the script name, so we start from the second argument
    filename = sys.argv[1]
    # print("filename:", filename)
else:
    # print("No arguments passed - Create a new filename")
    folder_path = f"../_log/{datetime.datetime.now().strftime('%Y-%m-%d')}"
    if not os.path.exists(folder_path):
        os.makedirs(folder_path)
    filename = f"{folder_path}/refid_sync_{datetime.datetime.now().strftime('%H%M%S')}.log"

logging.basicConfig(level=logging.DEBUG,
                    format='%(process)d:%(name)s ; %(asctime)s ; %(levelname)s ; %(message)s',
                    datefmt='%Y-%m-%d %H:%M:%S',
                    filename=filename,
                    filemode='a'
                    )

# =========================================
# Init Global Variables

logging.info(f'==> script[{os.path.basename(__file__)}]')
print(f'==> script[{os.path.basename(__file__)}]')

DB = "DB-IT"
oracle_IT = OracleConnexion(DB)


# =========================================
# Functions / Classes


def Get_REFID_IOP_REFAD_GROUPS_RULES():
    sql_query = "select * from SA.REFID_IOP_REFAD_GROUPS_RULES"
    dataset = oracle_IT.fetch_data_from_db(sql_query)
    return dataset


def Drop_REFID_IOP_REFAD_GROUPS_RULES():
    sql_query = "DROP TABLE SA.REFID_IOP_REFAD_GROUPS_RULES"
    dataset = oracle_IT.exec_ddl_sql(sql_query)
    return dataset


def Create_REFID_IOP_REFAD_GROUPS_RULES():
    sql_query = f"""
            CREATE TABLE SA.REFID_IOP_REFAD_GROUPS_RULES (
                        ID 					NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
                        GROUPCATEGORY 		VARCHAR2(30),
                        INSTITUTION 		VARCHAR2(30),
                        SITE	 			VARCHAR2(30),
                        EMPLOYEETYPE 		VARCHAR2(30),
                        SAMACCOUNTNAME 		VARCHAR2(100),
                        DISTINGUISHEDNAME 	VARCHAR2(400),
            CONSTRAINT REFID_IOP_REFAD_GROUPS_RULES_PK PRIMARY KEY (ID)
                   )
    """
    dataset = oracle_IT.exec_ddl_sql(sql_query)
    return dataset


def CreateIndex_REFID_IOP_REFAD_GROUPS_RULES():
    sql_query = "CREATE INDEX SA.REFID_IOP_REFAD_GROUPS_RULES_KEYS ON SA.REFID_IOP_REFAD_GROUPS_RULES (INSTITUTION, SITE, EMPLOYEETYPE)"
    dataset = oracle_IT.exec_ddl_sql(sql_query)
    return dataset


def Set_REFID_IOP_REFAD_GROUPS_RULES(GROUPCATEGORY, INSTITUTION, SITE, EMPLOYEETYPE, SAMACCOUNTNAME, DISTINGUISHEDNAME):
    sql_query = f"INSERT INTO SA.REFID_IOP_REFAD_GROUPS_RULES (GROUPCATEGORY, INSTITUTION, SITE, EMPLOYEETYPE, SAMACCOUNTNAME, DISTINGUISHEDNAME) VALUES ('{GROUPCATEGORY}','{INSTITUTION}', '{SITE}', '{EMPLOYEETYPE}', '{SAMACCOUNTNAME}', '{DISTINGUISHEDNAME}')"
    dataset = oracle_IT.exec_ddl_sql(sql_query)
    return dataset


def Load_REFID_IOP_REFAD_GROUPS_RULES():

    # COMPANY
    Set_REFID_IOP_REFAD_GROUPS_RULES('Distribution', 'CHU-BRUGMANN', 'ASTRID', 'ADMINISTRATIF', 'Tout le PATO de Reine Astrid', 'CN=Tout le PATO de Reine Astrid,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Distribution', 'CHU-BRUGMANN', 'ASTRID', 'OTHER', 'Tout le PATO de Reine Astrid', 'CN=Tout le PATO de Reine Astrid,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Distribution', 'CHU-BRUGMANN', 'ASTRID', 'PARAMEDICAL', 'Tout le PATO de Reine Astrid', 'CN=Tout le PATO de Reine Astrid,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Distribution', 'CHU-BRUGMANN', 'ASTRID', 'TECHNIQUE', 'Tout le PATO de Reine Astrid', 'CN=Tout le PATO de Reine Astrid,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Distribution', 'CHU-BRUGMANN', 'BRIEN', 'ADMINISTRATIF', 'Tout le PATO de Brien', 'CN=Tout le PATO de Brien,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Distribution', 'CHU-BRUGMANN', 'BRIEN', 'OTHER', 'Tout le PATO de Brien', 'CN=Tout le PATO de Brien,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Distribution', 'CHU-BRUGMANN', 'BRIEN', 'PARAMEDICAL', 'Tout le PATO de Brie', 'CN=Tout le PATO de Brien,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Distribution', 'CHU-BRUGMANN', 'BRIEN', 'TECHNIQUE', 'Tout le PATO de Brien', 'CN=Tout le PATO de Brien,OU=Distribution Group,OU=Exchange,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', '-', 'MEDICAL', 'OSIRIS - MVSL - Medical', 'CN=OSIRIS - MVSL - Medical,OU=MedicalViewerSilverLight,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', '-', 'MEDICAL', 'Tous les medecins de Brugmann', 'CN=Tous les medecins de Brugmann,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', '-', 'MEDICAL', 'Wireless Users', 'CN=Wireless Users,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', '-', 'NURSING', 'OSIRIS - MVSL - Nursing', 'CN=OSIRIS - MVSL - Nursing,OU=MedicalViewerSilverLight,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', '-', 'PARAMEDICAL', 'OSIRIS - MVSL - Paramedical', 'CN=OSIRIS - MVSL - Paramedical,OU=MedicalViewerSilverLight,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', 'ASTRID', 'MEDICAL', 'Tous les medecins de Brugmann', 'CN=Tous les medecins de Brugmann,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', 'ASTRID', 'MEDICAL', 'Tout le nursing de Reine Astrid', 'CN=Tout le nursing de Reine Astrid,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', 'ASTRID', 'NURSING', 'Tout le nursing de Reine Astrid', 'CN=Tout le nursing de Reine Astrid,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', 'BRIEN', 'MEDICAL', 'Tous les medecins de Brien', 'CN=Tous les medecins de Brien,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', 'BRIEN', 'NURSING', 'Tout le nursing de Brien', 'CN=Tout le nursing de Brien,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', 'HORTA', 'ADMINISTRATIF', 'Tout le PATO de Horta', 'CN=Tout le PATO de Horta,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', 'HORTA', 'MEDICAL', 'Tous les medecins de Horta', 'CN=Tous les medecins de Horta,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', 'HORTA', 'NURSING', 'Tout le nursing de Horta', 'CN=Tout le nursing de Horta,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', 'HORTA', 'OTHER', 'Tout le PATO de Horta', 'CN=Tout le PATO de Horta,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', 'HORTA', 'PARAMEDICAL', 'Tout le PATO de Horta', 'CN=Tout le PATO de Horta,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'CHU-BRUGMANN', 'HORTA', 'TECHNIQUE', 'Tout le PATO de Horta', 'CN=Tout le PATO de Horta,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'HUDERF', '-', 'ADMINISTRATIF', 'Tout le PATO de l Huderf', 'CN=Tout le PATO de l Huderf,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'HUDERF', '-', 'MEDICAL', 'OSIRIS - MVSL - Medical', 'CN=OSIRIS - MVSL - Medical,OU=MedicalViewerSilverLight,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'HUDERF', '-', 'MEDICAL', 'Tous les medecins de l Huderf', 'CN=Tous les medecins de l Huderf,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'HUDERF', '-', 'MEDICAL', 'Wireless Users', 'CN=Wireless Users,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'HUDERF', '-', 'NURSING', 'OSIRIS - MVSL - Nursing', 'CN=OSIRIS - MVSL - Nursing,OU=MedicalViewerSilverLight,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'HUDERF', '-', 'NURSING', 'Tout le nursing de l Huderf', 'CN=Tout le nursing de l Huderf,OU=Security,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'HUDERF', '-', 'OTHER', 'Tout le PATO de l Huderf', 'CN=Tout le PATO de l Huderf,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'HUDERF', '-', 'PARAMEDICAL', 'OSIRIS - MVSL - Paramedical', 'CN=OSIRIS - MVSL - Paramedical,OU=MedicalViewerSilverLight,OU=Applications,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'HUDERF', '-', 'PARAMEDICAL', 'Tout le PATO de l Huderf', 'CN=Tout le PATO de l Huderf,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')
    Set_REFID_IOP_REFAD_GROUPS_RULES('Security', 'HUDERF', '-', 'TECHNIQUE', 'Tout le PATO de l Huderf', 'CN=Tout le PATO de l Huderf,OU=Distribution,OU=Groups,OU=OSIRIS,DC=chu-brugmann,DC=be')

    return True

# =========================================
# Main

# Start Script


now_start = datetime.datetime.now()
logging.info(f"Start at : {now_start.strftime('%Y-%m-%d %H:%M:%S')}")

logging.info(f"Create Oracle Table (SA.REFID_IOP_REFAD_GROUPS_RULES) for DB:{DB}")

try:
    logging.info(f"Get_REFID_IOP_REFAD_GROUPS_RULES")
    dataset = Get_REFID_IOP_REFAD_GROUPS_RULES()
    logging.info(f"{len(dataset)} rows")
except:
    logging.info(f"Table do not exist")

try:
    logging.info(f"Drop_REFID_IOP_REFAD_GROUPS_RULES")
    dataset = Drop_REFID_IOP_REFAD_GROUPS_RULES()
    logging.info(f"{dataset}")
except:
    logging.info(f"Table do not exist")

try:
    logging.info(f"Create_REFID_IOP_REFAD_GROUPS_RULES")
    dataset = Create_REFID_IOP_REFAD_GROUPS_RULES()
    logging.info(f"{dataset}")
except:
    logging.info(f"Cannot create table")

try:
    logging.info(f"CreateIndex_REFID_IOP_REFAD_GROUPS_RULES")
    dataset = CreateIndex_REFID_IOP_REFAD_GROUPS_RULES()
    logging.info(f"{dataset}")
except:
    logging.info(f"Cannot create table")

try:
    logging.info(f"Load_REFID_IOP_REFAD_GROUPS_RULES")
    dataset = Load_REFID_IOP_REFAD_GROUPS_RULES()
    logging.info(f"{dataset}")
except:
    logging.info(f"Cannot create table")

try:
    logging.info(f"Get_REFID_IOP_REFAD_GROUPS_RULES")
    dataset = Get_REFID_IOP_REFAD_GROUPS_RULES()
    logging.info(f"{len(dataset)} rows")
    logging.info(dataset)
except:
    logging.info(f"Table do not exist")

# Stop Script

now_stop = datetime.datetime.now()
logging.info(f"Stop at : {now_stop.strftime('%Y-%m-%d %H:%M:%S')} ")

delta = now_stop - now_start
logging.info(f"Delta time : {delta}")


# =========================================
# End of Script

logging.info(f"<== End of Script ==>")
